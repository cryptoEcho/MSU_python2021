# Написать функцию ifeval() от одного параметра-строки, которая проверяет, является ли эта строка вычислимым арифметическим выражением без скобок
# Допустимое выражение может состоять только из
# Целых десятичных чисел без знака
# Идентификаторов (последовательность букв, цифр и символов подчёркивания, не начинающаяся с цифры)
# Четырёх знаков арифметических операций (+, -, *, /)
# Пробелов между операндами и знаками
# Если выражение не вычислимо, функция возвращает False
# Если выражение вычислимо, но содержит идентификатор, функция возвращает True
# Если выражение вычислимо и состоит только из операций и числа, функция возвращает результат вычисления
# Если при этом должно произойти исключение (например, деление на 0), оно происходит
# Подсказка 1: задача решается с помощью двух несложных регулярных выражений, причём одно — часть второго
# Подсказка 2: eval()
# Пример:
#  >>> ifeval("1 + 2 * 3 / 4")
#    2 2.5
#    3 >>> ifeval("int+2*SomeThing/4")
#    4 True
#    5 >>> ifeval("1+2+3+")
#    6 False
#    7 >>> ifeval("V a r + 1 2 3")
#    8 False
#    9 >>>
import re
#p = re.search(['+', '-', '*', '/'])
t_str="2 + 2 + 3 + 2"

my_list = []
my_set = set(['+', '-', '*', '/'])
def ifeval(my_str):
   flag_1 = True
   flag_2 = True
   flag_3 = True
   my_list = my_str.split()

   for i in range(len(my_list)):
       if (i%2==0):
          flag_1= flag_1 & (my_list[i].isdigit())
          flag_3 = flag_3 & ((my_list[i].isidentifier()) | my_list[i].isdigit())


       if (i%2==1):
           flag_2 = flag_2 & (my_list[i] in my_set)

   if flag_1 & flag_2:
       return  (eval(my_str))
   elif flag_3 & flag_2:
       return True
   elif ~flag_2:
       return False


print(ifeval(t_str))





