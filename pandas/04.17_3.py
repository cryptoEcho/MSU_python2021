# Написать функцию ifeval() от одного параметра-строки, которая проверяет,
# является ли эта строка вычислимым арифметическим выражением без скобок
# Допустимое выражение может состоять только из
# Целых десятичных чисел без знака
# Идентификаторов (последовательность букв, цифр и символов подчёркивания, не начинающаяся с цифры)
# Четырёх знаков арифметических операций (+, -, *, /)
# Пробелов между операндами и знаками
# Если выражение не вычислимо, функция возвращает False
# Если выражение вычислимо, но содержит идентификатор, функция возвращает True
# Если выражение вычислимо и состоит только из операций и числа, функция возвращает результат вычисления
# Если при этом должно произойти исключение (например, деление на 0), оно происходит
# Подсказка 1: задача решается с помощью двух несложных регулярных выражений, причём одно — часть второго
# Подсказка 2: eval()
# Пример:
#  >>> ifeval("1 + 2 * 3 / 4")
#    2 2.5
#    3 >>> ifeval("int+2*SomeThing/4")
#    4 True
#    5 >>> ifeval("1+2+3+")
#    6 False
#    7 >>> ifeval("V a r + 1 2 3")
#    8 False
#    9 >>>
# import re
# p = re.search()

def ifeval(my_str):
    my_set = {'+', '-', '*', '/'}
    b = True
    a = True
    my_list = my_str.split()
    if len(my_list) % 2 == 0:
        return False
    for i in range(len(my_list)):
        if i % 2 == 0 and not my_list[i].isdigit():
            a = False
            if not str(my_list[i]).isidentifier():
                b = False
        if i % 2 == 1:
            if my_list[i] not in my_set:
                b = False

    if b and a:
        return eval(my_str)
    elif b:
        return True
    else:
        return False

t_str = "1 + 2 * 3 / 4"
print(ifeval(t_str))
print(ifeval("1 + 2 * 3 / 4 + 4a"))
print(ifeval("1 + 2 * 3 / 4 +"))
print('bye')
